<!DOCTYPE html>
<html class="no-js fuelux">

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>E-Learning</title>
    <link rel="stylesheet" href="https://fuelcdn.com/fuelux/2.3/css/fuelux.min.css">
</head>

<body>
    <div class="container-fluid">
        <h1>EMDR Cycle</h1>
        <div id="my-wizard" class="wizard">
        <!-- Setting up steps row -->
            <ul class="steps">
                <li data-target="#step1" class="active"><span class="badge badge-info">1</span>Overview<span class="chevron"></span></li>
                <li data-target="#step2"><span class="badge">2</span>Assessment<span class="chevron"></span></li>
                <li data-target="#step3"><span class="badge">3</span>Desensitization<span class="chevron"></span></li>
                <li data-target="#step4"><span class="badge">4</span>Installation<span class="chevron"></span></li>
                <li data-target="#step5"><span class="badge">5</span>Body Scan<span class="chevron"></span></li>
                <li data-target="#step6"><span class="badge">6</span>Closure<span class="chevron"></span></li>
            </ul>
            <div class="actions">
                <button class="btn btn-mini btn-prev"> <i class="icon-arrow-left"></i>Prev</button>
                <button class="btn btn-mini btn-next" data-last="Finish">Next<i class="icon-arrow-right"></i></button>
            </div>
        </div>

        <div class="step-content">
            <div class="step-pane active" id="step1">
                Patient Overview Goes Here
            </div>

            <div class="step-pane sample-pane bg-danger alert" id="step2">
                <div id="assessment_form"><%= render 'form' %></div>
            </div>
    
            <div class="step-pane" id="step3">
                <div class="row-fluid"> 
                    <div class="span6">

                    </div>
                    <div class="span6"></div>
                </div>
            </div>

            <div class="step-pane" id="step4">
                <script type="text/javascript">

//Code for Scatterplot
var w = 500;
var h = 300;
var padding = 30;

var dataset = [];
var numDataPoints = 50;
var xRange = Math.random() * 1000;
var yRange = Math.random() * 1000;
for (var i = 0; i < numDataPoints; i++) {
    var newNumber1 = Math.floor(Math.random() * xRange);
    var newNumber2 = Math.floor(Math.random() * yRange);
    dataset.push([newNumber1, newNumber2]);
}

//Create SVG Element
var svg = d3.select("#step4")
            .append("svg")
            .attr("width", w)
            .attr("height", h);

var xScale = d3.scale.linear()
                     .domain([0, d3.max(dataset, function(d) { return d[0];
                     })])
                     .range([padding, w - padding * 2]);

var yScale = d3.scale.linear()
                     .domain([0, d3.max(dataset, function(d) { return d[1];
                     })])
                     .range([h - padding, padding]);

var rScale = d3.scale.linear()
                     .domain([0, d3.max(dataset, function (d) { return d[1]
                     })])
                     .range([2, 5]);

var xAxis = d3.svg.axis()
                  .scale(xScale)
                  .orient("bottom")
                  .ticks(5);

var yAxis = d3.svg.axis()
                  .scale(yScale)
                  .orient("left")
                  .ticks(5);

svg.selectAll("circle")
    .data(dataset)
    .enter()
    .append("circle")
    .attr("cx", function(d) {
            return xScale(d[0]);
    })
    .attr("cy", function(d) {
            return yScale(d[1]);
    })
    .attr("r", function(d){
            return rScale(d[1]);
    });

svg.selectAll("text")
    .data(dataset)
    .enter()
    .append("text")
    .text(function(d) {
        return d[0] + "," + d[1];
    })
    .attr("x", function(d) {
        return xScale(d[0]);
    })
    .attr("y", function(d) {
        return yScale(d[1]);
    })
    .attr("font-family", "san-serif")
    .attr("font-size", "11px")
    .attr("fill", "red");

svg.append("g")
    .attr("class", "axis")
    .attr("transform", "translate(0," + (h - padding) + ")")
    .call(xAxis);

svg.append("g")
    .attr("class", "axis")
    .attr("transform", "translate(" + padding + ",0)")
    .call(yAxis);

            </script>
            </div>

            <div class="step-pane" id="step5">
            </div>

            <div class="step-pane sample-pane bg-danger alert" id="step6">
                <h4>Closure</h4>
                    <p>Add closing notes here.</p>
            </div>

        </div>
    </div>
 
</body>
</html>